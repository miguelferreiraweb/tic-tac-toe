name: Build and Deploy

on:
  pull_request:
    types: [reopened, opened, synchronize, edited]
  push:
    branches:
      # - development (discontinued due to "free version" billing costs blocking deployment on fly.io).
      - master

env:
  TIC_TAC_TOE_VERCEL_TOKEN: ${{ secrets.TIC_TAC_TOE_VERCEL_TOKEN }}
  # FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.9.0'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.11.0
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: |
          pnpm i
          pnpm i --frozen-lockfile

    - name: Lint and Test Composite Action
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: ./.github/actions/lint_and_test

    - name: Build application
      run: pnpm run build

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # all commits and history will be fetched during the checkout process.
      - name: SonarCloud Composite Action
        uses: ./.github/actions/sonarcloud

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - sonarcloud
    if: |
      always() &&
      needs.build.result == 'success' &&
      (needs.sonarcloud.result == 'success' || needs.sonarcloud.result == 'skipped')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy Composite Action (DEV or PROD)
        uses: ./.github/actions/deploy
        with:
          vercel_token: ${{ env.TIC_TAC_TOE_VERCEL_TOKEN }}
